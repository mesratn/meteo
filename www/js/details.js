// Generated by LiveScript 1.4.0
(function(){
  var generateData, line, details, slice$ = [].slice;
  generateData = function(lines, idx){
    var min, max, hourVals, mins, maxs, avgs, lastHour, i$, len$, i, line, val, hour, ref$;
    min = max = +lines[0][idx];
    hourVals = [];
    mins = [];
    maxs = [];
    avgs = [];
    lastHour = 1;
    for (i$ = 0, len$ = lines.length; i$ < len$; ++i$) {
      i = i$;
      line = lines[i$];
      val = +line[idx];
      if (val === val) {
        min <= val || (min = val);
        max >= val || (max = val);
        hourVals.push(val);
      }
      hour = Math.ceil(++i / 720);
      if (hour !== lastHour || i === lines.length) {
        lastHour = hour;
        mins.push(min);
        maxs.push(max);
        avgs.push(hourVals ? avg(hourVals) : 0);
        min = max = +((ref$ = line[i + 1]) != null ? ref$[idx] : void 8);
        hourVals = [];
      }
    }
    return [mins, maxs, avgs];
  };
  line = function(color, title, value){
    var ref$;
    return ref$ = {}, ref$.color = color, ref$.value = value, ref$, ref$.width = 1, ref$.zIndex = 2, ref$.label = {
      text: title
    }, ref$;
  };
  details = angular.module('meteo.details', []);
  details.controller('DetailsCtrl', function($stateParams, $scope, $http){
    var file, x$;
    file = loadFiles()[$stateParams.id];
    if (file == null) {
      alert("No such file");
      return;
    }
    $scope.graph = {
      headerIndex: 0
    };
    x$ = $http.get(file.url);
    x$.error(function(it){
      return alert(it != null ? "Error: " + it : "Erreur interne");
    });
    x$.success(function(unparsed){
      var ref$, header, lines, graph1, graph2, colors;
      ref$ = simpleParseHis(unparsed), header = ref$[0], lines = slice$.call(ref$, 1);
      $scope.title = lines != null ? (ref$ = lines[0]) != null ? ref$[0] : void 8 : void 8;
      $scope.headers = slice$.call(header, 1);
      $scope.headerIndex = 0;
      colors = Highcharts.getOptions().colors;
      return ($scope.draw = function(){
        var ref$, mins, maxs, avgs, graph1, graph2;
        if (graph1 != null) {
          graph1.destroy();
        }
        if (graph2 != null) {
          graph2.destroy();
        }
        ref$ = generateData(lines, $scope.graph.headerIndex + 1), mins = ref$[0], maxs = ref$[1], avgs = ref$[2];
        graph1 = Highcharts.chart('graph-first', {
          title: '1st chart',
          yAxis: {
            plotLines: [line('red', 'Min', Math.min.apply(Math, mins)), line('green', 'Max', Math.max.apply(Math, maxs)), line('blue', 'Moy', avg(avgs))]
          },
          xAxis: {
            title: {
              text: 'Date/heure'
            },
            categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
          },
          series: [
            {
              name: 'Min',
              data: mins
            }, {
              name: 'Max',
              data: maxs
            }, {
              name: 'Moy',
              data: avgs
            }
          ]
        });
        return graph2 = Highcharts.chart('graph-second', {
          title: {
            text: '2nd chart'
          },
          chart: {
            zoomType: 'x'
          },
          xAxis: {
            categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
          },
          plotOptions: {
            area: {
              fillColor: {
                linearGradient: {
                  x1: 0,
                  y1: 0,
                  x2: 0,
                  y2: 1
                },
                stops: [[0, colors[0]], [1, Highcharts.color(colors[0]).setOpacity(0).get('rgba')]]
              },
              marker: {
                radius: 2
              },
              lineWidth: 1,
              states: {
                hover: {
                  lineWidth: 1
                }
              },
              treshold: null
            }
          },
          series: [{
            type: 'area',
            name: 'Moy',
            data: avgs,
            color: '#0000ff'
          }]
        });
      })();
    });
  });
}).call(this);
